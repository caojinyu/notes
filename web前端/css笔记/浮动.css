传统布局方式：
	普通流（标准流）、浮动、定位。

浮动：
	浮动可以改变元素默认的排列方式。
	float: left|right|none;
	浮动属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或者另一个浮动框的边缘。
	记住：
		多个块状元素纵向排列找标准流。
		多个元素横向排列找浮动。

浮动特性（重难点）：
	1：浮动元素会脱离标准流,不再保留原先的位置
	2：浮动的元素会一行内显示并元素顶部对齐，如果装不下，会另起一行。
	3: 浮动的元素会有行内块的特性。
	如果行内元素有了float属性，就不需要再设置display: inline-block
	如果块级盒子没有设置宽度，默认宽度和父亲一样宽，但是设置浮动之后，它的大小根据内容来确定的。浮动的盒子之间是没有缝隙的，是紧挨在一起的。

浮动元素经常和标准流父级搭配使用：
	为了约束浮动元素位置，我们网页布局一般采取的策略是：
	先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置，符合网页布局第一准则。
	第二准则：先设置盒子大小，再设置盒子的位置。
	
浮动的盒子只会影响浮动盒子后面的标准流，不会影响前面的标准流.

为什么要清除浮动？
	如果浮动的元素很多很多，我们的父盒子的高度就不能写死了。
	父盒子千万不能设置高度为0这种方法。
	由于父盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父盒子高度为0时，就会影响下面的标准流盒子。
	清除了浮动，父盒子就会检测子盒子的告诉自动设置告诉了。
	clear: both | left | right;
	清除的策略是闭合浮动。
	方法：
		1：额外标签法，也称为隔墙法。是w3c推荐的做法。
		2：给父盒子添加overflow属性。
		3：给父盒子添加after伪元素。
		4：给父盒子添加双伪元素。
	
	1:额外标签：
		在浮动元素的后面，添加下面的额外标签。这个新增的额外标签必须是块状元素。
		<div style="clear:both"></div>
	2: 给父盒子添加overflow。
		overflow: auto;
		overflow:hidden; 用在合并外边距的问题，防止父盒子塌陷.
	3：after伪元素：百度使用。
		.clearfix::after {
			content: "";
			display: block;
			height: 0;
			clear: both;
			visibility: hidden;
		}
		.clearfix {
			*zoom: 1; IE6 IE7专有.
		}
	4: 双伪元素清除浮动：小米使用
		.clearfix::before,.clearfix::after {
			content:"",
			display: table;
		} 
		.clearfix::after {
			clear: both;
		}
		.clearfix {
			*zoom: 1;
		}
	