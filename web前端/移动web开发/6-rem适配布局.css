方案：
	我们页面文字能否随着屏幕大小变化而变化呢？
	流式布局和flex布局主要针对宽度布局，那高度如何设置呢？
	怎么样让屏幕变化的时候元素高度和宽度等比例缩放呢？
	
rem（root em）是一个单位。是一个相对单位，类似于em，em是父元素字体大小。
不同的是rem的基准是相对于html元素的字体大小。
比如根元素html设置font-size=12px;非根元素设置width:2rem，则换成px就是24px。

媒体查询（media query）是CSS3的新语法。
	使用@media查询，可以针对不同的媒体类型定义不同的样式。
	@media可以针对不同的屏幕尺寸设置不同的样式。
	当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。
	目前针对很多苹果手机、安卓手机、平板等设备都用到多媒体查询。
	语法规范：
		@media mediatype and|not|only (media feature) {
			CSS-Code;
		}
		mediatype:
			all: 所有
			print：打印机和扫描设备
			scree: 屏幕
		and：将多个媒体特性连接在一起。且
		not：排除某个媒体类型，相当于非的意思
		only：指定某个特定的媒体类型。
		
		media feature: 媒体特性
			width：定义输出设备中页面可见区域的宽度
			min-width：定义输出设备中页面最小可见区域宽度
			max-width：定义输出设备中页面最大可见区域宽度
		
/* 		在屏幕上，并且最大宽度小于等于800px，背景色是pink。 */
		@media screen and (max-width: 800px) {
			body {
				background-color: pink;
			}
		}
/* 		小于800px的时候是pink色，继续缩小，到了小于等于500px的时候，背景色变成紫色。 */
		@media screen and (max-width: 500px) {
			body {
				background-color: purple;
			}
		}

有了媒体查询，我们可以通过rem实现元素动态大小变化了。

媒体引入：
	准备两套css文件，根据屏幕的尺寸判断选择引入哪个css文件。
	<link rel="" href="" media="screen and (min-width:320px)">
	<link rel="" href="" media="screen and (min-width:640px)">
	
less基础：
	CSS是一门非程序式的语言，没有变量、函数、scope（作用域）等概念。
	CSS需要编写大量看似没有逻辑的代码，CSS冗余度是比较高的。
	不方便维护及扩展，不利于复用。
	CSS没有很好的计算能力。
	非前端开发工程师来讲，往往会因为缺少CSS编写经验而很难写出组织良好且易于维护的CSS代码项目。
	
less是css的扩展语言，也称为css的预处理。引入了变量，运算以及函数等功能，大大简化了css的编写，并且降低了css的维护成本。

less变量：
	@变量名 : 值。
	
less嵌套：
	.header {
		width:200px;
		height: 200px;
		background-color: pink;
		a {
			color: red;
		}
	}
	相当于之前的：
	.header {}
	.header a {}
	儿子住在了爸爸家里。
	伪类的情况，我们需要紧紧的连接在一起，我们需要用&符号进行紧紧的连接在一起。
	.header {
		width:200px;
		height: 200px;
		background-color: pink;
		a {
			color: red;
			&:hover {
				
			}
		}
	}
	
less 运算：
	任何数字、颜色或者变量都可以参与运算。 + - * /
	@border: 5px + 5;
	div {
	  width: 200px;
	  height: 200px;
	  border: @border solid red;
	}
	/ 除法一定要加上括号，比如(50px / 2),如果不添加括号的话，会被认为50px / 2，是50px或者2.
	
	运算符的左右是需要空格分开的，不然很容易出问题。
	两个数参与运算，如果只有一个数有单位，最后的结果以这个单位为准。
	如果两个数都有单位，而且不一样的单位，最后的结果以第一个单位为准。
	
	
	
rem适配方案：
	方案1：
		less
		媒体查询
		rem
	方案2：
		flexible.js
		rem
	整体而言，技术2会更推荐一些。但是必须引入js。

设计稿基本以750px为基准的。
动态设置html标签font-size大小。
	假设设计稿是750px。
	假设我们把整个屏幕划分为15等份。
	每一份作为html字体大小，这里就是50px。
	那么在320ox设备的时候，字体大小为21.33px。
	用我们页面元素的大小除以不同的html字体大小会发现他们比例还是相同的。
	比如我们以750为标准设计稿。
	一个100 * 100像素的页面元素在750像素屏幕下，就是100 / 50转换为rem是2rem * 2rem比例是1比1.
	320屏幕下，html字体大小为21.33，则2rem = 42.66px，此时宽和高就是42.66，但是宽和高的比例还是1比1.
	但是已经能实现不用屏幕下，页面元素盒子等比例缩放的效果。
	
	
	
